name: go
on: [pull_request]
jobs:
  test-zcash:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.21
        uses: actions/setup-go@v5
        with:
          go-version: "1.21"
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - name: Caching modules
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-aw-${{ hashFiles('**/go.sum') }}

      # Remove apt repos that are known to break from time to time
      # See https://github.com/actions/virtual-environments/issues/323
      - name: Install dependency packages
        run: |
          for apt_file in `grep -lr microsoft /etc/apt/sources.list.d/`; do sudo rm $apt_file; done
          sudo apt-get update
          sudo apt-get install -y build-essential
          sudo apt-get install -y jq mesa-opencl-icd ocl-icd-opencl-dev pkg-config libudev-dev hwloc libhwloc-dev

      - name: Get dependencies
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          source $HOME/.cargo/env
          go get -u github.com/onsi/ginkgo/ginkgo
          go get github.com/onsi/gomega@v1.13.0
          go get -u golang.org/x/lint/golint
          go get -u github.com/loongy/covermerge
          go get -u github.com/mattn/goveralls
          go get -u github.com/xlab/c-for-go@cef5ec7

      - name: Run vetting
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          go mod tidy
          go vet ./...

      - name: Run multichain infrastructure
        run: |
          cd $GITHUB_WORKSPACE/infra
          source .env
          docker-compose up -d --build zcash

      - name: Sleep until the nodes are up
        uses: jakejarvis/wait-action@master
        with:
          time: "1m"

      - name: Check on docker containers
        run: docker ps -a

      - name: Run tests and report test coverage
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          source ./infra/.env
          cd $GITHUB_WORKSPACE
          go test \
            -zec=true \
            -timeout 1500s

  test-dogecoin:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.21
        uses: actions/setup-go@v5
        with:
          go-version: "1.21"
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - name: Caching modules
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-aw-${{ hashFiles('**/go.sum') }}

      # Remove apt repos that are known to break from time to time
      # See https://github.com/actions/virtual-environments/issues/323
      - name: Install dependency packages
        run: |
          for apt_file in `grep -lr microsoft /etc/apt/sources.list.d/`; do sudo rm $apt_file; done
          sudo apt-get update
          sudo apt-get install -y build-essential
          sudo apt-get install -y jq mesa-opencl-icd ocl-icd-opencl-dev pkg-config libudev-dev hwloc libhwloc-dev

      - name: Get dependencies
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          source $HOME/.cargo/env
          go get -u github.com/onsi/ginkgo/ginkgo
          go get github.com/onsi/gomega@v1.13.0
          go get -u golang.org/x/lint/golint
          go get -u github.com/loongy/covermerge
          go get -u github.com/mattn/goveralls
          go get -u github.com/xlab/c-for-go@cef5ec7

      - name: Run vetting
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          go mod tidy
          go vet ./...

      - name: Run multichain infrastructure
        run: |
          cd $GITHUB_WORKSPACE/infra
          source .env
          docker-compose up -d --build dogecoin

      - name: Sleep until the nodes are up
        uses: jakejarvis/wait-action@master
        with:
          time: "1m"

      - name: Check on docker containers
        run: docker ps -a

      - name: Run tests and report test coverage
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          source ./infra/.env
          cd $GITHUB_WORKSPACE
          go test \
            -doge=true \
            -timeout 1500s

  test-btc:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.21
        uses: actions/setup-go@v5
        with:
          go-version: "1.21"
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - name: Caching modules
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-aw-${{ hashFiles('**/go.sum') }}

      # Remove apt repos that are known to break from time to time
      # See https://github.com/actions/virtual-environments/issues/323
      - name: Install dependency packages
        run: |
          for apt_file in `grep -lr microsoft /etc/apt/sources.list.d/`; do sudo rm $apt_file; done
          sudo apt-get update
          sudo apt-get install -y build-essential
          sudo apt-get install -y jq mesa-opencl-icd ocl-icd-opencl-dev pkg-config libudev-dev hwloc libhwloc-dev

      - name: Get dependencies
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          source $HOME/.cargo/env
          go get -u github.com/onsi/ginkgo/ginkgo
          go get github.com/onsi/gomega@v1.13.0
          go get -u golang.org/x/lint/golint
          go get -u github.com/loongy/covermerge
          go get -u github.com/mattn/goveralls
          go get -u github.com/xlab/c-for-go@cef5ec7

      - name: Run vetting
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          go mod tidy
          go vet ./...

      - name: Run multichain infrastructure
        run: |
          cd $GITHUB_WORKSPACE/infra
          source .env
          docker-compose up -d --build \
            bitcoin 

      - name: Sleep until the nodes are up
        uses: jakejarvis/wait-action@master
        with:
          time: "1m"

      - name: Check on docker containers
        run: docker ps -a

      - name: Run tests and report test coverage
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          source ./infra/.env
          cd $GITHUB_WORKSPACE
          go test \
            -btc=true \
            -timeout 1500s
  test-avax:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.21
        uses: actions/setup-go@v5
        with:
          go-version: "1.21"
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - name: Caching modules
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-aw-${{ hashFiles('**/go.sum') }}

      # Remove apt repos that are known to break from time to time
      # See https://github.com/actions/virtual-environments/issues/323
      - name: Install dependency packages
        run: |
          for apt_file in `grep -lr microsoft /etc/apt/sources.list.d/`; do sudo rm $apt_file; done
          sudo apt-get update
          sudo apt-get install -y build-essential
          sudo apt-get install -y jq mesa-opencl-icd ocl-icd-opencl-dev pkg-config libudev-dev hwloc libhwloc-dev

      - name: Get dependencies
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          source $HOME/.cargo/env
          go get -u github.com/onsi/ginkgo/ginkgo
          go get github.com/onsi/gomega@v1.13.0
          go get -u golang.org/x/lint/golint
          go get -u github.com/loongy/covermerge
          go get -u github.com/mattn/goveralls
          go get -u github.com/xlab/c-for-go@cef5ec7

      - name: Run vetting
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          go mod tidy
          go vet ./...

      - name: Run multichain infrastructure
        run: |
          cd $GITHUB_WORKSPACE/infra
          source .env
          docker-compose up -d --build avalanche

      - name: Sleep until the nodes are up
        uses: jakejarvis/wait-action@master
        with:
          time: "1m"

      - name: Check on docker containers
        run: docker ps -a

      - name: Run tests and report test coverage
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          source ./infra/.env
          cd $GITHUB_WORKSPACE
          go test \
            -avax=true \
            -timeout 1500s
  test-ftm:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.21
        uses: actions/setup-go@v5
        with:
          go-version: "1.21"
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - name: Caching modules
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-aw-${{ hashFiles('**/go.sum') }}

      # Remove apt repos that are known to break from time to time
      # See https://github.com/actions/virtual-environments/issues/323
      - name: Install dependency packages
        run: |
          for apt_file in `grep -lr microsoft /etc/apt/sources.list.d/`; do sudo rm $apt_file; done
          sudo apt-get update
          sudo apt-get install -y build-essential
          sudo apt-get install -y jq mesa-opencl-icd ocl-icd-opencl-dev pkg-config libudev-dev hwloc libhwloc-dev

      - name: Get dependencies
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          source $HOME/.cargo/env
          go get -u github.com/onsi/ginkgo/ginkgo
          go get github.com/onsi/gomega@v1.13.0
          go get -u golang.org/x/lint/golint
          go get -u github.com/loongy/covermerge
          go get -u github.com/mattn/goveralls
          go get -u github.com/xlab/c-for-go@cef5ec7

      - name: Run vetting
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          go mod tidy
          go vet ./...

      - name: Run multichain infrastructure
        run: |
          cd $GITHUB_WORKSPACE/infra
          source .env
          docker-compose up -d --build fantom

      - name: Sleep until the nodes are up
        uses: jakejarvis/wait-action@master
        with:
          time: "1m"

      - name: Check on docker containers
        run: docker ps -a

      - name: Run tests and report test coverage
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          source ./infra/.env
          cd $GITHUB_WORKSPACE
          go test \
            -ftm=true \
            -timeout 1500s
  test-polygon:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.21
        uses: actions/setup-go@v5
        with:
          go-version: "1.21"
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - name: Caching modules
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-aw-${{ hashFiles('**/go.sum') }}

      # Remove apt repos that are known to break from time to time
      # See https://github.com/actions/virtual-environments/issues/323
      - name: Install dependency packages
        run: |
          for apt_file in `grep -lr microsoft /etc/apt/sources.list.d/`; do sudo rm $apt_file; done
          sudo apt-get update
          sudo apt-get install -y build-essential
          sudo apt-get install -y jq mesa-opencl-icd ocl-icd-opencl-dev pkg-config libudev-dev hwloc libhwloc-dev

      - name: Get dependencies
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          source $HOME/.cargo/env
          go get -u github.com/onsi/ginkgo/ginkgo
          go get github.com/onsi/gomega@v1.13.0
          go get -u golang.org/x/lint/golint
          go get -u github.com/loongy/covermerge
          go get -u github.com/mattn/goveralls
          go get -u github.com/xlab/c-for-go@cef5ec7

      - name: Run vetting
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          go mod tidy
          go vet ./...

      - name: Run multichain infrastructure
        run: |
          cd $GITHUB_WORKSPACE/infra
          source .env
          docker-compose up -d --build polygon

      - name: Sleep until the nodes are up
        uses: jakejarvis/wait-action@master
        with:
          time: "1m"

      - name: Check on docker containers
        run: docker ps -a

      - name: Run tests and report test coverage
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          source ./infra/.env
          cd $GITHUB_WORKSPACE
          go test \
            -matic=true \
            -timeout 1500s
  test-bsc:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.21
        uses: actions/setup-go@v5
        with:
          go-version: "1.21"
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - name: Caching modules
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-aw-${{ hashFiles('**/go.sum') }}

      # Remove apt repos that are known to break from time to time
      # See https://github.com/actions/virtual-environments/issues/323
      - name: Install dependency packages
        run: |
          for apt_file in `grep -lr microsoft /etc/apt/sources.list.d/`; do sudo rm $apt_file; done
          sudo apt-get update
          sudo apt-get install -y build-essential
          sudo apt-get install -y jq mesa-opencl-icd ocl-icd-opencl-dev pkg-config libudev-dev hwloc libhwloc-dev

      - name: Get dependencies
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          source $HOME/.cargo/env
          go get -u github.com/onsi/ginkgo/ginkgo
          go get github.com/onsi/gomega@v1.13.0
          go get -u golang.org/x/lint/golint
          go get -u github.com/loongy/covermerge
          go get -u github.com/mattn/goveralls
          go get -u github.com/xlab/c-for-go@cef5ec7

      - name: Run vetting
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          go mod tidy
          go vet ./...

      - name: Run multichain infrastructure
        run: |
          cd $GITHUB_WORKSPACE/infra
          source .env
          docker-compose up -d --build binance

      - name: Sleep until the nodes are up
        uses: jakejarvis/wait-action@master
        with:
          time: "1m"

      - name: Check on docker containers
        run: docker ps -a

      - name: Run tests and report test coverage
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          source ./infra/.env
          cd $GITHUB_WORKSPACE
          go test \
            -bsc=true \
            -timeout 1500s
  test-eth:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.21
        uses: actions/setup-go@v5
        with:
          go-version: "1.21"
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - name: Caching modules
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-aw-${{ hashFiles('**/go.sum') }}

      # Remove apt repos that are known to break from time to time
      # See https://github.com/actions/virtual-environments/issues/323
      - name: Install dependency packages
        run: |
          for apt_file in `grep -lr microsoft /etc/apt/sources.list.d/`; do sudo rm $apt_file; done
          sudo apt-get update
          sudo apt-get install -y build-essential
          sudo apt-get install -y jq mesa-opencl-icd ocl-icd-opencl-dev pkg-config libudev-dev hwloc libhwloc-dev

      - name: Get dependencies
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          source $HOME/.cargo/env
          go get -u github.com/onsi/ginkgo/ginkgo
          go get github.com/onsi/gomega@v1.13.0
          go get -u golang.org/x/lint/golint
          go get -u github.com/loongy/covermerge
          go get -u github.com/mattn/goveralls
          go get -u github.com/xlab/c-for-go@cef5ec7

      - name: Run vetting
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          go mod tidy
          go vet ./...

      - name: Run multichain infrastructure
        run: |
          cd $GITHUB_WORKSPACE/infra
          source .env
          docker-compose up -d --build ethereum

      - name: Sleep until the nodes are up
        uses: jakejarvis/wait-action@master
        with:
          time: "1m"

      - name: Check on docker containers
        run: docker ps -a

      - name: Run tests and report test coverage
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          source ./infra/.env
          cd $GITHUB_WORKSPACE
          go test \
            -eth=true \
            -timeout 1500s