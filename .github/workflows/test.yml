name: go
on: [pull_request]
jobs:
  test-solana:
    runs-on: ubuntu-latest
    env:
      FILECOIN_FFI_COMMIT: 7912389334e347bbb2eac0520c836830875c39de
      SOLANA_FFI_COMMIT: 720c0143d8655bfcd412ae73c949474df2c1dcf3
    steps:
      - name: Set up Go 1.17
        uses: actions/setup-go@v1
        with:
          go-version: 1.17

      - name: Configure git for Private Modules
        env:
          TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: git config --global url."https://jazg:${TOKEN}@github.com".insteadOf "https://github.com"

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          submodules: recursive

      - name: Caching modules
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-aw-${{ hashFiles('**/go.sum') }}

      - name: Cache extern dependencies (FFI)
        id: cache-extern
        uses: actions/cache@v2
        env:
          cache-name: cache-externs
        with:
          path: .extern
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ env.FILECOIN_FFI_COMMIT }}-${{ env.SOLANA_FFI_COMMIT }}

      # Remove apt repos that are known to break from time to time
      # See https://github.com/actions/virtual-environments/issues/323
      - name: Install dependency packages
        run: |
          for apt_file in `grep -lr microsoft /etc/apt/sources.list.d/`; do sudo rm $apt_file; done
          sudo apt-get update
          sudo apt-get install -y build-essential
          sudo apt-get install -y jq mesa-opencl-icd ocl-icd-opencl-dev pkg-config libudev-dev hwloc libhwloc-dev
          curl https://sh.rustup.rs -sSf | sh -s -- -y
          source $HOME/.cargo/env

      - name: Get dependencies
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          source $HOME/.cargo/env
          go get -u github.com/onsi/ginkgo/ginkgo
          go get -u github.com/onsi/gomega/...
          go get -u golang.org/x/lint/golint
          go get -u github.com/loongy/covermerge
          go get -u github.com/mattn/goveralls
          go get -u github.com/xlab/c-for-go@cef5ec7
          cd $GITHUB_WORKSPACE
          mkdir .extern && cd .extern

      - name: Install dependencies (Solana FFI)
        if: steps.cache-extern.outputs.cache-hit != 'true'
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          source $HOME/.cargo/env
          cd $GITHUB_WORKSPACE/.extern
          git clone https://github.com/renproject/solana-ffi.git
          cd solana-ffi
          git checkout ${{ env.SOLANA_FFI_COMMIT }}
          make clean
          make

      - name: Run vetting
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          source $HOME/.cargo/env
          go mod edit -replace=github.com/renproject/solana-ffi=./.extern/solana-ffi
          go mod tidy
          go vet ./...

      - name: Setup environment for Solana tests
        run: |
          sh -c "$(curl -sSfL https://release.solana.com/v1.8.14/install)"
          cd $GITHUB_WORKSPACE
          export PATH="/home/runner/.local/share/solana/install/active_release/bin:$PATH"
          echo ${{ secrets.SOLANA_KEY }} > ~/.config/solana/id.json
          docker run -d -h 0.0.0.0 -p 8899:8899 -p 8900:8900 renbot/ren-solana:latest

      - name: Sleep until the node is up
        uses: jakejarvis/wait-action@master
        with:
          time: "1m"

      - name: Check on docker containers
        run: docker ps -a

      - name: Run tests for Solana
        run: |
          export PATH="/home/runner/.local/share/solana/install/active_release/bin:$PATH"
          cd $GITHUB_WORKSPACE/chain/solana
          go test -timeout 100s
  test-zcash:
    runs-on: ubuntu-latest
    env:
      FILECOIN_FFI_COMMIT: 7912389334e347bbb2eac0520c836830875c39de
      SOLANA_FFI_COMMIT: 720c0143d8655bfcd412ae73c949474df2c1dcf3
    steps:
      - name: Set up Go 1.17
        uses: actions/setup-go@v1
        with:
          go-version: 1.17
        id: go

      - name: Configure git for Private Modules
        env:
          TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: git config --global url."https://jazg:${TOKEN}@github.com".insteadOf "https://github.com"

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          submodules: recursive

      - name: Caching modules
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-aw-${{ hashFiles('**/go.sum') }}

      - name: Cache extern dependencies (FFI)
        id: cache-extern
        uses: actions/cache@v2
        env:
          cache-name: cache-externs
        with:
          path: .extern
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ env.FILECOIN_FFI_COMMIT }}-${{ env.SOLANA_FFI_COMMIT }}

      # Remove apt repos that are known to break from time to time
      # See https://github.com/actions/virtual-environments/issues/323
      - name: Install dependency packages
        run: |
          for apt_file in `grep -lr microsoft /etc/apt/sources.list.d/`; do sudo rm $apt_file; done
          sudo apt-get update
          sudo apt-get install -y build-essential
          sudo apt-get install -y jq mesa-opencl-icd ocl-icd-opencl-dev pkg-config libudev-dev hwloc libhwloc-dev
          curl https://sh.rustup.rs -sSf | sh -s -- -y
          source $HOME/.cargo/env

      - name: Get dependencies
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          source $HOME/.cargo/env
          go get -u github.com/onsi/ginkgo/ginkgo
          go get -u github.com/onsi/gomega/...
          go get -u golang.org/x/lint/golint
          go get -u github.com/loongy/covermerge
          go get -u github.com/mattn/goveralls
          go get -u github.com/xlab/c-for-go@cef5ec7
          cd $GITHUB_WORKSPACE
          mkdir .extern && cd .extern

      - name: Install dependencies (Solana FFI)
        if: steps.cache-extern.outputs.cache-hit != 'true'
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          source $HOME/.cargo/env
          cd $GITHUB_WORKSPACE/.extern
          git clone https://github.com/renproject/solana-ffi.git
          cd solana-ffi
          git checkout ${{ env.SOLANA_FFI_COMMIT }}
          make clean
          make

      - name: Run vetting
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          source $HOME/.cargo/env
          go mod edit -replace=github.com/renproject/solana-ffi=./.extern/solana-ffi
          go mod tidy
          go vet ./...

      - name: Run linting
        run: |
          cd $GITHUB_WORKSPACE
          export PATH=$PATH:$(go env GOPATH)/bin
          go get -u golang.org/x/lint/golint
          golint $(go list ./...)

      - name: Run multichain infrastructure
        run: |
          cd $GITHUB_WORKSPACE/infra
          source .env
          docker-compose up -d --build zcash

      - name: Sleep until the nodes are up
        uses: jakejarvis/wait-action@master
        with:
          time: "1m"

      - name: Check on docker containers
        run: docker ps -a

      - name: Run tests and report test coverage
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          source ./infra/.env
          cd $GITHUB_WORKSPACE
          go test \
            -zec=true \
            -timeout 1500s

  test-dogecoin:
    runs-on: ubuntu-latest
    env:
      FILECOIN_FFI_COMMIT: 7912389334e347bbb2eac0520c836830875c39de
      SOLANA_FFI_COMMIT: 720c0143d8655bfcd412ae73c949474df2c1dcf3
    steps:
      - name: Set up Go 1.17
        uses: actions/setup-go@v1
        with:
          go-version: 1.17
        id: go

      - name: Configure git for Private Modules
        env:
          TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: git config --global url."https://jazg:${TOKEN}@github.com".insteadOf "https://github.com"

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          submodules: recursive

      - name: Caching modules
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-aw-${{ hashFiles('**/go.sum') }}

      - name: Cache extern dependencies (FFI)
        id: cache-extern
        uses: actions/cache@v2
        env:
          cache-name: cache-externs
        with:
          path: .extern
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ env.FILECOIN_FFI_COMMIT }}-${{ env.SOLANA_FFI_COMMIT }}

      # Remove apt repos that are known to break from time to time
      # See https://github.com/actions/virtual-environments/issues/323
      - name: Install dependency packages
        run: |
          for apt_file in `grep -lr microsoft /etc/apt/sources.list.d/`; do sudo rm $apt_file; done
          sudo apt-get update
          sudo apt-get install -y build-essential
          sudo apt-get install -y jq mesa-opencl-icd ocl-icd-opencl-dev pkg-config libudev-dev hwloc libhwloc-dev
          curl https://sh.rustup.rs -sSf | sh -s -- -y
          source $HOME/.cargo/env

      - name: Get dependencies
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          source $HOME/.cargo/env
          go get -u github.com/onsi/ginkgo/ginkgo
          go get -u github.com/onsi/gomega/...
          go get -u golang.org/x/lint/golint
          go get -u github.com/loongy/covermerge
          go get -u github.com/mattn/goveralls
          go get -u github.com/xlab/c-for-go@cef5ec7
          cd $GITHUB_WORKSPACE
          mkdir .extern && cd .extern

      - name: Install dependencies (Solana FFI)
        if: steps.cache-extern.outputs.cache-hit != 'true'
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          source $HOME/.cargo/env
          cd $GITHUB_WORKSPACE/.extern
          git clone https://github.com/renproject/solana-ffi.git
          cd solana-ffi
          git checkout ${{ env.SOLANA_FFI_COMMIT }}
          make clean
          make

      - name: Run vetting
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          source $HOME/.cargo/env
          go mod edit -replace=github.com/renproject/solana-ffi=./.extern/solana-ffi
          go mod tidy
          go vet ./...

      - name: Run linting
        run: |
          cd $GITHUB_WORKSPACE
          export PATH=$PATH:$(go env GOPATH)/bin
          go get -u golang.org/x/lint/golint
          golint $(go list ./...)

      - name: Run multichain infrastructure
        run: |
          cd $GITHUB_WORKSPACE/infra
          source .env
          docker-compose up -d --build dogecoin

      - name: Sleep until the nodes are up
        uses: jakejarvis/wait-action@master
        with:
          time: "1m"

      - name: Check on docker containers
        run: docker ps -a

      - name: Run tests and report test coverage
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          source ./infra/.env
          cd $GITHUB_WORKSPACE
          go test \
            -doge=true \
            -timeout 1500s

  test-btc-bch:
    runs-on: ubuntu-latest
    env:
      FILECOIN_FFI_COMMIT: 7912389334e347bbb2eac0520c836830875c39de
      SOLANA_FFI_COMMIT: 720c0143d8655bfcd412ae73c949474df2c1dcf3
    steps:
      - name: Set up Go 1.17
        uses: actions/setup-go@v1
        with:
          go-version: 1.17
        id: go

      - name: Configure git for Private Modules
        env:
          TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: git config --global url."https://jazg:${TOKEN}@github.com".insteadOf "https://github.com"

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          submodules: recursive

      - name: Caching modules
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-aw-${{ hashFiles('**/go.sum') }}

      - name: Cache extern dependencies (FFI)
        id: cache-extern
        uses: actions/cache@v2
        env:
          cache-name: cache-externs
        with:
          path: .extern
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ env.FILECOIN_FFI_COMMIT }}-${{ env.SOLANA_FFI_COMMIT }}

      # Remove apt repos that are known to break from time to time
      # See https://github.com/actions/virtual-environments/issues/323
      - name: Install dependency packages
        run: |
          for apt_file in `grep -lr microsoft /etc/apt/sources.list.d/`; do sudo rm $apt_file; done
          sudo apt-get update
          sudo apt-get install -y build-essential
          sudo apt-get install -y jq mesa-opencl-icd ocl-icd-opencl-dev pkg-config libudev-dev hwloc libhwloc-dev
          curl https://sh.rustup.rs -sSf | sh -s -- -y
          source $HOME/.cargo/env

      - name: Get dependencies
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          source $HOME/.cargo/env
          go get -u github.com/onsi/ginkgo/ginkgo
          go get -u github.com/onsi/gomega/...
          go get -u golang.org/x/lint/golint
          go get -u github.com/loongy/covermerge
          go get -u github.com/mattn/goveralls
          go get -u github.com/xlab/c-for-go@cef5ec7
          cd $GITHUB_WORKSPACE
          mkdir .extern && cd .extern

      - name: Install dependencies (Solana FFI)
        if: steps.cache-extern.outputs.cache-hit != 'true'
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          source $HOME/.cargo/env
          cd $GITHUB_WORKSPACE/.extern
          git clone https://github.com/renproject/solana-ffi.git
          cd solana-ffi
          git checkout ${{ env.SOLANA_FFI_COMMIT }}
          make clean
          make

      - name: Run vetting
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          source $HOME/.cargo/env
          go mod edit -replace=github.com/renproject/solana-ffi=./.extern/solana-ffi
          go mod tidy
          go vet ./...

      - name: Run linting
        run: |
          cd $GITHUB_WORKSPACE
          export PATH=$PATH:$(go env GOPATH)/bin
          go get -u golang.org/x/lint/golint
          golint $(go list ./...)

      - name: Run multichain infrastructure
        run: |
          cd $GITHUB_WORKSPACE/infra
          source .env
          docker-compose up -d --build \
            bitcoin \
            bitcoincash

      - name: Sleep until the nodes are up
        uses: jakejarvis/wait-action@master
        with:
          time: "1m"

      - name: Check on docker containers
        run: docker ps -a

      - name: Run tests and report test coverage
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          source ./infra/.env
          cd $GITHUB_WORKSPACE
          go test \
            -btc=true \
            -bch=true \
            -timeout 1500s
  test-avax:
    runs-on: ubuntu-latest
    env:
      FILECOIN_FFI_COMMIT: 7912389334e347bbb2eac0520c836830875c39de
      SOLANA_FFI_COMMIT: 720c0143d8655bfcd412ae73c949474df2c1dcf3
    steps:
      - name: Set up Go 1.17
        uses: actions/setup-go@v1
        with:
          go-version: 1.17
        id: go

      - name: Configure git for Private Modules
        env:
          TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: git config --global url."https://jazg:${TOKEN}@github.com".insteadOf "https://github.com"

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          submodules: recursive

      - name: Caching modules
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-aw-${{ hashFiles('**/go.sum') }}

      - name: Cache extern dependencies (FFI)
        id: cache-extern
        uses: actions/cache@v2
        env:
          cache-name: cache-externs
        with:
          path: .extern
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ env.FILECOIN_FFI_COMMIT }}-${{ env.SOLANA_FFI_COMMIT }}

      # Remove apt repos that are known to break from time to time
      # See https://github.com/actions/virtual-environments/issues/323
      - name: Install dependency packages
        run: |
          for apt_file in `grep -lr microsoft /etc/apt/sources.list.d/`; do sudo rm $apt_file; done
          sudo apt-get update
          sudo apt-get install -y build-essential
          sudo apt-get install -y jq mesa-opencl-icd ocl-icd-opencl-dev pkg-config libudev-dev hwloc libhwloc-dev
          curl https://sh.rustup.rs -sSf | sh -s -- -y
          source $HOME/.cargo/env

      - name: Get dependencies
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          source $HOME/.cargo/env
          go get -u github.com/onsi/ginkgo/ginkgo
          go get -u github.com/onsi/gomega/...
          go get -u golang.org/x/lint/golint
          go get -u github.com/loongy/covermerge
          go get -u github.com/mattn/goveralls
          go get -u github.com/xlab/c-for-go@cef5ec7
          cd $GITHUB_WORKSPACE
          mkdir .extern && cd .extern

      - name: Install dependencies (Solana FFI)
        if: steps.cache-extern.outputs.cache-hit != 'true'
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          source $HOME/.cargo/env
          cd $GITHUB_WORKSPACE/.extern
          git clone https://github.com/renproject/solana-ffi.git
          cd solana-ffi
          git checkout ${{ env.SOLANA_FFI_COMMIT }}
          make clean
          make

      - name: Run vetting
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          source $HOME/.cargo/env
          go mod edit -replace=github.com/renproject/solana-ffi=./.extern/solana-ffi
          go mod tidy
          go vet ./...

      - name: Run linting
        run: |
          cd $GITHUB_WORKSPACE
          export PATH=$PATH:$(go env GOPATH)/bin
          go get -u golang.org/x/lint/golint
          golint $(go list ./...)

      - name: Run multichain infrastructure
        run: |
          cd $GITHUB_WORKSPACE/infra
          source .env
          docker-compose up -d --build avalanche

      - name: Sleep until the nodes are up
        uses: jakejarvis/wait-action@master
        with:
          time: "1m"

      - name: Check on docker containers
        run: docker ps -a

      - name: Run tests and report test coverage
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          source ./infra/.env
          cd $GITHUB_WORKSPACE
          go test \
            -avax=true \
            -timeout 1500s
  test-ftm:
    runs-on: ubuntu-latest
    env:
      FILECOIN_FFI_COMMIT: 7912389334e347bbb2eac0520c836830875c39de
      SOLANA_FFI_COMMIT: 720c0143d8655bfcd412ae73c949474df2c1dcf3
    steps:
      - name: Set up Go 1.17
        uses: actions/setup-go@v1
        with:
          go-version: 1.17
        id: go

      - name: Configure git for Private Modules
        env:
          TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: git config --global url."https://jazg:${TOKEN}@github.com".insteadOf "https://github.com"

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          submodules: recursive

      - name: Caching modules
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-aw-${{ hashFiles('**/go.sum') }}

      - name: Cache extern dependencies (FFI)
        id: cache-extern
        uses: actions/cache@v2
        env:
          cache-name: cache-externs
        with:
          path: .extern
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ env.FILECOIN_FFI_COMMIT }}-${{ env.SOLANA_FFI_COMMIT }}

      # Remove apt repos that are known to break from time to time
      # See https://github.com/actions/virtual-environments/issues/323
      - name: Install dependency packages
        run: |
          for apt_file in `grep -lr microsoft /etc/apt/sources.list.d/`; do sudo rm $apt_file; done
          sudo apt-get update
          sudo apt-get install -y build-essential
          sudo apt-get install -y jq mesa-opencl-icd ocl-icd-opencl-dev pkg-config libudev-dev hwloc libhwloc-dev
          curl https://sh.rustup.rs -sSf | sh -s -- -y
          source $HOME/.cargo/env

      - name: Get dependencies
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          source $HOME/.cargo/env
          go get -u github.com/onsi/ginkgo/ginkgo
          go get -u github.com/onsi/gomega/...
          go get -u golang.org/x/lint/golint
          go get -u github.com/loongy/covermerge
          go get -u github.com/mattn/goveralls
          go get -u github.com/xlab/c-for-go@cef5ec7
          cd $GITHUB_WORKSPACE
          mkdir .extern && cd .extern

      - name: Install dependencies (Solana FFI)
        if: steps.cache-extern.outputs.cache-hit != 'true'
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          source $HOME/.cargo/env
          cd $GITHUB_WORKSPACE/.extern
          git clone https://github.com/renproject/solana-ffi.git
          cd solana-ffi
          git checkout ${{ env.SOLANA_FFI_COMMIT }}
          make clean
          make

      - name: Run vetting
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          source $HOME/.cargo/env
          go mod edit -replace=github.com/renproject/solana-ffi=./.extern/solana-ffi
          go mod tidy
          go vet ./...

      - name: Run linting
        run: |
          cd $GITHUB_WORKSPACE
          export PATH=$PATH:$(go env GOPATH)/bin
          go get -u golang.org/x/lint/golint
          golint $(go list ./...)

      - name: Run multichain infrastructure
        run: |
          cd $GITHUB_WORKSPACE/infra
          source .env
          docker-compose up -d --build fantom

      - name: Sleep until the nodes are up
        uses: jakejarvis/wait-action@master
        with:
          time: "1m"

      - name: Check on docker containers
        run: docker ps -a

      - name: Run tests and report test coverage
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          source ./infra/.env
          cd $GITHUB_WORKSPACE
          go test \
            -ftm=true \
            -timeout 1500s
  test-polygon:
    runs-on: ubuntu-latest
    env:
      FILECOIN_FFI_COMMIT: 7912389334e347bbb2eac0520c836830875c39de
      SOLANA_FFI_COMMIT: 720c0143d8655bfcd412ae73c949474df2c1dcf3
    steps:
      - name: Set up Go 1.17
        uses: actions/setup-go@v1
        with:
          go-version: 1.17
        id: go

      - name: Configure git for Private Modules
        env:
          TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: git config --global url."https://jazg:${TOKEN}@github.com".insteadOf "https://github.com"

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          submodules: recursive

      - name: Caching modules
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-aw-${{ hashFiles('**/go.sum') }}

      - name: Cache extern dependencies (FFI)
        id: cache-extern
        uses: actions/cache@v2
        env:
          cache-name: cache-externs
        with:
          path: .extern
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ env.FILECOIN_FFI_COMMIT }}-${{ env.SOLANA_FFI_COMMIT }}

      # Remove apt repos that are known to break from time to time
      # See https://github.com/actions/virtual-environments/issues/323
      - name: Install dependency packages
        run: |
          for apt_file in `grep -lr microsoft /etc/apt/sources.list.d/`; do sudo rm $apt_file; done
          sudo apt-get update
          sudo apt-get install -y build-essential
          sudo apt-get install -y jq mesa-opencl-icd ocl-icd-opencl-dev pkg-config libudev-dev hwloc libhwloc-dev
          curl https://sh.rustup.rs -sSf | sh -s -- -y
          source $HOME/.cargo/env

      - name: Get dependencies
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          source $HOME/.cargo/env
          go get -u github.com/onsi/ginkgo/ginkgo
          go get -u github.com/onsi/gomega/...
          go get -u golang.org/x/lint/golint
          go get -u github.com/loongy/covermerge
          go get -u github.com/mattn/goveralls
          go get -u github.com/xlab/c-for-go@cef5ec7
          cd $GITHUB_WORKSPACE
          mkdir .extern && cd .extern

      - name: Install dependencies (Solana FFI)
        if: steps.cache-extern.outputs.cache-hit != 'true'
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          source $HOME/.cargo/env
          cd $GITHUB_WORKSPACE/.extern
          git clone https://github.com/renproject/solana-ffi.git
          cd solana-ffi
          git checkout ${{ env.SOLANA_FFI_COMMIT }}
          make clean
          make

      - name: Run vetting
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          source $HOME/.cargo/env
          go mod edit -replace=github.com/renproject/solana-ffi=./.extern/solana-ffi
          go mod tidy
          go vet ./...

      - name: Run linting
        run: |
          cd $GITHUB_WORKSPACE
          export PATH=$PATH:$(go env GOPATH)/bin
          go get -u golang.org/x/lint/golint
          golint $(go list ./...)

      - name: Run multichain infrastructure
        run: |
          cd $GITHUB_WORKSPACE/infra
          source .env
          docker-compose up -d --build polygon

      - name: Sleep until the nodes are up
        uses: jakejarvis/wait-action@master
        with:
          time: "1m"

      - name: Check on docker containers
        run: docker ps -a

      - name: Run tests and report test coverage
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          source ./infra/.env
          cd $GITHUB_WORKSPACE
          go test \
            -matic=true \
            -timeout 1500s
  test-bsc:
    runs-on: ubuntu-latest
    env:
      FILECOIN_FFI_COMMIT: 7912389334e347bbb2eac0520c836830875c39de
      SOLANA_FFI_COMMIT: 720c0143d8655bfcd412ae73c949474df2c1dcf3
    steps:
      - name: Set up Go 1.17
        uses: actions/setup-go@v1
        with:
          go-version: 1.17
        id: go

      - name: Configure git for Private Modules
        env:
          TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: git config --global url."https://jazg:${TOKEN}@github.com".insteadOf "https://github.com"

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          submodules: recursive

      - name: Caching modules
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-aw-${{ hashFiles('**/go.sum') }}

      - name: Cache extern dependencies (FFI)
        id: cache-extern
        uses: actions/cache@v2
        env:
          cache-name: cache-externs
        with:
          path: .extern
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ env.FILECOIN_FFI_COMMIT }}-${{ env.SOLANA_FFI_COMMIT }}

      # Remove apt repos that are known to break from time to time
      # See https://github.com/actions/virtual-environments/issues/323
      - name: Install dependency packages
        run: |
          for apt_file in `grep -lr microsoft /etc/apt/sources.list.d/`; do sudo rm $apt_file; done
          sudo apt-get update
          sudo apt-get install -y build-essential
          sudo apt-get install -y jq mesa-opencl-icd ocl-icd-opencl-dev pkg-config libudev-dev hwloc libhwloc-dev
          curl https://sh.rustup.rs -sSf | sh -s -- -y
          source $HOME/.cargo/env

      - name: Get dependencies
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          source $HOME/.cargo/env
          go get -u github.com/onsi/ginkgo/ginkgo
          go get -u github.com/onsi/gomega/...
          go get -u golang.org/x/lint/golint
          go get -u github.com/loongy/covermerge
          go get -u github.com/mattn/goveralls
          go get -u github.com/xlab/c-for-go@cef5ec7
          cd $GITHUB_WORKSPACE
          mkdir .extern && cd .extern

      - name: Install dependencies (Solana FFI)
        if: steps.cache-extern.outputs.cache-hit != 'true'
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          source $HOME/.cargo/env
          cd $GITHUB_WORKSPACE/.extern
          git clone https://github.com/renproject/solana-ffi.git
          cd solana-ffi
          git checkout ${{ env.SOLANA_FFI_COMMIT }}
          make clean
          make

      - name: Run vetting
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          source $HOME/.cargo/env
          go mod edit -replace=github.com/renproject/solana-ffi=./.extern/solana-ffi
          go mod tidy
          go vet ./...

      - name: Run linting
        run: |
          cd $GITHUB_WORKSPACE
          export PATH=$PATH:$(go env GOPATH)/bin
          go get -u golang.org/x/lint/golint
          golint $(go list ./...)

      - name: Run multichain infrastructure
        run: |
          cd $GITHUB_WORKSPACE/infra
          source .env
          docker-compose up -d --build binance

      - name: Sleep until the nodes are up
        uses: jakejarvis/wait-action@master
        with:
          time: "1m"

      - name: Check on docker containers
        run: docker ps -a

      - name: Run tests and report test coverage
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          source ./infra/.env
          cd $GITHUB_WORKSPACE
          go test \
            -bsc=true \
            -timeout 1500s
  test-eth:
    runs-on: ubuntu-latest
    env:
      FILECOIN_FFI_COMMIT: 7912389334e347bbb2eac0520c836830875c39de
      SOLANA_FFI_COMMIT: 720c0143d8655bfcd412ae73c949474df2c1dcf3
    steps:
      - name: Set up Go 1.17
        uses: actions/setup-go@v1
        with:
          go-version: 1.17
        id: go

      - name: Configure git for Private Modules
        env:
          TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: git config --global url."https://jazg:${TOKEN}@github.com".insteadOf "https://github.com"

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          submodules: recursive

      - name: Caching modules
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-aw-${{ hashFiles('**/go.sum') }}

      - name: Cache extern dependencies (FFI)
        id: cache-extern
        uses: actions/cache@v2
        env:
          cache-name: cache-externs
        with:
          path: .extern
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ env.FILECOIN_FFI_COMMIT }}-${{ env.SOLANA_FFI_COMMIT }}

      # Remove apt repos that are known to break from time to time
      # See https://github.com/actions/virtual-environments/issues/323
      - name: Install dependency packages
        run: |
          for apt_file in `grep -lr microsoft /etc/apt/sources.list.d/`; do sudo rm $apt_file; done
          sudo apt-get update
          sudo apt-get install -y build-essential
          sudo apt-get install -y jq mesa-opencl-icd ocl-icd-opencl-dev pkg-config libudev-dev hwloc libhwloc-dev
          curl https://sh.rustup.rs -sSf | sh -s -- -y
          source $HOME/.cargo/env

      - name: Get dependencies
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          source $HOME/.cargo/env
          go get -u github.com/onsi/ginkgo/ginkgo
          go get -u github.com/onsi/gomega/...
          go get -u golang.org/x/lint/golint
          go get -u github.com/loongy/covermerge
          go get -u github.com/mattn/goveralls
          go get -u github.com/xlab/c-for-go@cef5ec7
          cd $GITHUB_WORKSPACE
          mkdir .extern && cd .extern

      - name: Install dependencies (Solana FFI)
        if: steps.cache-extern.outputs.cache-hit != 'true'
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          source $HOME/.cargo/env
          cd $GITHUB_WORKSPACE/.extern
          git clone https://github.com/renproject/solana-ffi.git
          cd solana-ffi
          git checkout ${{ env.SOLANA_FFI_COMMIT }}
          make clean
          make

      - name: Run vetting
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          source $HOME/.cargo/env
          go mod edit -replace=github.com/renproject/solana-ffi=./.extern/solana-ffi
          go mod tidy
          go vet ./...

      - name: Run linting
        run: |
          cd $GITHUB_WORKSPACE
          export PATH=$PATH:$(go env GOPATH)/bin
          go get -u golang.org/x/lint/golint
          golint $(go list ./...)

      - name: Run multichain infrastructure
        run: |
          cd $GITHUB_WORKSPACE/infra
          source .env
          docker-compose up -d --build ethereum

      - name: Sleep until the nodes are up
        uses: jakejarvis/wait-action@master
        with:
          time: "1m"

      - name: Check on docker containers
        run: docker ps -a

      - name: Run tests and report test coverage
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          source ./infra/.env
          cd $GITHUB_WORKSPACE
          go test \
            -eth=true \
            -timeout 1500s